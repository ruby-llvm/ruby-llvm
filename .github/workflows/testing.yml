name: Matrix Testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, macos-13, macos-14, macos-15]
        ruby: ['2.7', '3.0', '3.1', '3.2', '3.3']
    continue-on-error: ${{ endsWith(matrix.ruby, 'head') || matrix.ruby == 'debug' }}
    steps:
      - name: Check for LLVM on Homebrew
        id: homebrew_check
        if: startsWith(matrix.os, 'macos')
        run: |
          brew info llvm@19 || echo "brew=true" >> "$GITHUB_OUTPUT"
      - name: Install LLVM on macos
        if: steps.step1.outputs.brew == 'true'
        run: |
          # brew update --auto-update
          brew install llvm@18
          echo "$(brew --prefix llvm@18)/bin" >> $GITHUB_PATH
          sudo mkdir -p /opt/local/
          sudo ln -s $(brew --prefix llvm@19)/lib /opt/local/lib
          # ffi will only look for files in a small set of directories, so llvm needs to be there
          # https://github.com/ffi/ffi/blob/master/lib/ffi/dynamic_library.rb#L33
          # /usr/lib /usr/local/lib /opt/local/lib /opt/homebrew/lib
          # this uses /opt/local/lib -> /usr/local/opt/llvm/lib
          echo "setup=true" >> "$GITHUB_OUTPUT"
      - name: 'MacOS debug'
        if: steps.step1.outputs.brew == 'true'
        run: |
          echo $(brew --repository)
          echo $(brew --prefix llvm@19)
          echo $(brew info llvm@19)
          echo "$PATH"
          echo $(llvm-config --ldflags)
          ls -l $(brew --prefix llvm@19)/lib/libLLVM.dylib
          ls -l /opt/local/lib/libLLVM.dylib
      - name: Install LLVM on ubuntu
        id: ubuntu_setup
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 19
          # sudo apt-get install -y libpolly-19-dev
          echo "setup=true" >> "$GITHUB_OUTPUT"
      - name: Fix symlink issues
        if: false
        run: |
          # TODO: [LLVM 19] remove this patch when packaging is fixed
          # see: https://github.com/llvm/llvm-project/issues/105987
          echo "broken"
          file /usr/lib/llvm-19/lib/libLLVM* | grep broken
          file /usr/lib/x86_64-linux-gnu/libLLVM* | grep broken
          # readlink -q "/usr/lib/x86_64-linux-gnu/libLLVM-19.so.1" && \
          echo "create symlink"
          sudo ln -s /usr/lib/llvm-19/lib/libLLVM.so.1 /usr/lib/x86_64-linux-gnu/libLLVM-19.so.1
          echo "fixed"
          file /usr/lib/llvm-19/lib/libLLVM* | grep -qv broken
          file /usr/lib/x86_64-linux-gnu/libLLVM* | grep -qv broken          
          # echo '/usr/lib/llvm-19/lib/libLLVM.so.1' | sudo tee -a /etc/ld.so.conf.d/llvm.conf
          # sudo ldconfig -l -v /usr/lib/llvm-19/lib/libLLVM.so.1
          # sudo ldconfig -l -v /usr/lib/llvm-19/lib/libLLVM.so.19.1
          # sudo ldconfig
          # ldconfig -p | grep -i llvm
      - name: 'Ubuntu debug'
        if: steps.ubuntu_setup.outputs.setup == 'true'
        run: |
          echo "LLVM libs"
          sudo ldconfig
          ldconfig -p | grep -i llvm
          # echo "LLVM packages"
          # dpkg -l | grep -i llvm
          # which clang
          # clang --version
          # which clang-19
          # clang-19 --version
          # ls -alF /usr/lib/x86_64-linux-gnu/libLLVM*
          # find /usr/lib/x86_64-linux-gnu/ -xtype l -print
          # ls -alF /usr/lib/llvm-19/lib/
          # ls -alF /usr/lib/llvm-19/include/
          # dpkg -l | egrep 'c\+\+|g\+\+|gcc|llvm|build-essential'
          # ls -alF /usr/include/c++/*/cstddef
          # ls -alF /usr/lib/llvm-*/include/
      - uses: actions/checkout@v4
        if: steps.macos_setup.outputs.setup == 'true' || steps.ubuntu_setup.outputs.setup == 'true'
      - uses: ruby/setup-ruby@v1
        if: steps.macos_setup.outputs.setup == 'true' || steps.ubuntu_setup.outputs.setup == 'true'
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - run: cd ext/ruby-llvm-support && bundle exec rake
        name: "Build support library"
        if: steps.macos_setup.outputs.setup == 'true' || steps.ubuntu_setup.outputs.setup == 'true'
      - run: bundle exec rake
        name: "Run tests"
        if: steps.macos_setup.outputs.setup == 'true' || steps.ubuntu_setup.outputs.setup == 'true'
      - run: bundle exec rake test:samples
        name: "Run samples"
        if: steps.macos_setup.outputs.setup == 'true' || steps.ubuntu_setup.outputs.setup == 'true'
